{"attribute-arbitrary-js-expression":"- var authenticated = true\nbody(class=authenticated ? 'authed' : 'anon')","attribute-attributes":"p#foo&attributes({'data-foo': 'foo', 'data-bar': 'bar'})\n\n//- 也可以是值为对象的JavaScript表达式\n- attributes = {'data-foo': 'foo', 'data-bar': 'bar'}\np#foo&attributes(attributes)","attribute-boolean":"input(type='checkbox', checked)\ninput(type='checkbox', checked=true)\ninput(type='checkbox', checked=false)","attribute-class-array":"- var classes=['foo', 'bar', 'baz']\np(class=classes)\n","attribute-class-multi":"p(class='foo' class=['bar', 'baz'])","attribute-class-object":"- var currentUrl='/about'\na(class={atcive: currentUrl === '/'} href='/') Home\na(class={active: currentUrl === '/about'} href='/about') About\n","attribute-class":"p(class='foo bar baz')\n","attribute-multi-lines":"input(\n  type='checkbox'\n  name='agreement'\n  checked\n  )","attribute-shorthand-div":"// 类简写\n.foo\n.foo.bar.baz\n\n// ID简写\n#foo","attribute-shorthand":"// 类属性简写\ndiv.foo\ndiv.foo.bar.baz\n\n// ID简写\ndiv#foo\n","attribute-style-object":"p(style={color: 'red', background: 'green'})","attribute-style":"p(style='color:red;background:green')\n","attribute-unescaped":"div(escaped=\"<code>\")\ndiv(unescaped!=\"<code>\")","attributes":"//- 使用逗号分隔多个属性\ninput(type='text', name='foo')\n\n//- 使用空白字符分隔多个属性\ninput(type='text' name='foo')","case-block-expansion":"- var friends = 1\ncase friends\n  when 0: p you have no friends\n  when 1: p you have a friend\n  default: p you have #{friends} friends","case-fall-through":"- var friends = 0\ncase friends\n  when 0\n  when 1\n    p you have very few friends\n  default\n    p you have #{friends} friends","case":"- var friends = 10\ncase friends\n  when 0\n    p you have no friends\n  when 1\n    p you have a friend\n  default\n    p you have #{friends} friends\n","code-buffered-inline":"p= 'This code is <escaped>!'","code-buffered-unescaped":"p\n  != 'This code is <strong>not</strong> escaped!'\n\n// 行内形式\np!= 'This code is <strong>not</strong> escaped!'","code-buffered":"p\n  = 'This code is <escaped>!'\n","code-unbuffered-multi-line":"-\n  list = [\"Uno\", \"Dos\", \"Tres\",\n          \"Cuatro\", \"Cinco\", \"Seis\"]\neach item in list\n  li= item","code-unbuffered-one-line":"- for (var x = 0; x < 3; x++)\n  li item\n","comments-block":"// 块注释：第一行\n  块注释：第二行\n  块注释：第三行\np foo","comments-conditional":"<!--[if IE 8]>\n<html lang=\"en\" class=\"lt-ie9\">\n<![endif]-->\n<!--[if gt IE 8]><!-->\n<html lang=\"en\">\n<!--<![endif]-->","comments-general":"// 块注释：第一行\n  块注释：第二行\n  块注释：第三行\np foo","comments-single-line":"// 行注释\np foo","comments-unbuffered":"//- 不会被编译到HTML文件中的行注释\np foo","conditionals-unless":"- var user= { isAnonymous: false, name: 'foo' }\nunless user.isAnonymous\n  p You're logged in as #{user.name}\n","conditionals":"- var user = { description: 'foo bar baz' }\n- var authorised = false\n.user\n  if user.description\n    h2 Description\n    p.description= user.description\n  else if authorised\n    h2 Description\n    p.description.\n      User has no description,\n      why not add one...\n  else\n    h1 Description\n    p.description User has no description\n","doctype":"doctype html","filters":":marked\n  # Markdown\n\n  I often like including markdown documents.","includes-filter-index":"//- index.jade\ndoctype html\nhtml\n  head\n    title An Article\n  body\n    include:marked includes/article.md","includes-index":"//- index.jade\ndoctype html\nhtml\n  include ./includes/head.jade\n  body\n    h1 My Site\n    p Welcome to my super lame site.\n    include ./includes/foot.jade","includes-plain-text-index":"//- index.jade\ndoctype html\nhtml\n  head\n    style\n      include ./includes/style.css\n  body\n    h1 My Site\n    p Welcome to my super lame site.\n    script\n      include ./includes/script.js","interpolation-escape-arbitrary":"- var msg = \"not my inside voice\";\np This is #{msg.toUpperCase()}","interpolation-escape-shorthand":"- var book = { title: 'JavaScript: The Good Parts', author: 'Douglas Crockford' }\n\nh1= book.title\np author: #{book.author}","interpolation-escape":"- var user = \"李雷\";\n- var escaped = \"<span>escape!</span>\";\n\np 你好, #{user}\np 字符串插值时特殊字符会被转义: #{escaped}\n","interpolation-tag":"p.\n  There is a #[strong strong tag] in this paragraph.\n\n// 直接使用HTML而不是元素标签插值\np.\n  There is a <strong>strong tag</strong> in this paragraph.","interpolation-unescape":"- var riskyBusiness = \"<em>Some of the girls are wearing my mother's clothing.</em>\";\n.quote\n  p Joel: !{riskyBusiness}","iteration-each-index":"// 对数组进行迭代，并且获取索引\nul\n  for v, i in [1, 2, 3]\n    li= i + ': ' + v\n\n// 对对象进行迭代，并且获取属性名\nul\n  for v, k in {1: 'one', 2: 'two', 3: 'three'}\n    li= k + ': ' + v\n","iteration-each-js-expression":"// 对值为数组/对象的JavaScript表达式进行迭代\n- var values = [];\nul\n  each v in values.length ? values : ['There are no values']\n    li= v","iteration-each":"// 对数组进行迭代\nul\n  for v in [1, 2, 3]\n    li= v\n\n// 对对象进行迭代\nul\n  for v in {1: 'one', 2: 'two', 3: 'three'}\n    li= v\n","iteration-while":"- var n = 0\nul\n  while n < 4\n    li= n++","mixin-and-attributes":"mixin link(href, name)\n  a(href=href)&attributes(attributes)= name\n\n+link('/foo', 'foo')(class=\"btn\")","mixin-attributes":"mixin link(href, name)\n  //- attributes == {class: \"foo\", id: \"bar\"}\n  a(class!=attributes.class, id=attributes.id, href=href)= name\n\n+link('/foo', 'foo')(class='foo', id='bar')\n","mixin-block":"mixin article(title)\n  .article\n    .article-wrapper\n      h1= title\n      if block\n        block\n      else\n        p No content provided\n\n// 不使用mixin块\n+article('Hello world')\n\n// 使用mixin块\n+article('Hello world')\n  p This is my\n  p Amazing article","mixin-rest":"mixin list(id, ...items)\n  ul(id=id)\n    each item in items\n      li= item\n\n+list('my-list', 1, 2, 3, 4)","mixins-arguments":"mixin pet(name)\n  li.pet= name\n\nul\n  +pet('cat')\n  +pet('dog')","mixins":"mixin list\n  ul\n    li foo\n    li bar\n    li baz\n\n+list\n","page":"//- page.jade\nextends layouts/layout-two-column\n\nblock sidebar\n  h1 sidebar\n\nblock primary\n  h1 primary\n\nprepend script\n  script(src='js/runtime.js')\n\nappend script\n  script(src='js/google-analytics.js')","plain-text-block":"// 使用块文本\nscript.\n  if (usingJade)\n    console.log('you are awesome')\n  else\n    console.log('use jade')\n\n//- 如果使用管道文本，则要麻烦不少\n// 使用管道文本\nscript\n  | if (usingJade)\n  |   console.log('you are awesome')\n  | else\n  |   console.log('use jade')","plain-text-inline":"p Plain text in a paragraph","plain-text-pipe":"|Plain Text\n| Plain Text\np\n  | Plain text in a paragraph","tag-expansion":"div: p\n\n// 冒号要紧跟外层标签，两者之间不能有空白字符，否则被当作元素内容\ndiv : p","tag-self-close":"// HTML中的自关闭标签被自动识别并关闭\nimg\n\n// 可以通过在标签的末尾添加一个`/`显式地关闭一个标签\nfoo/\nbar(foo='bar')/","tags":"nav\n  ul\n    li: a(href=\"index.html\") Home\n    li: a(href=\"about.html\") About"}